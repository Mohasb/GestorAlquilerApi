// <auto-generated />
using System;
using GestorAlquilerApi.DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestorAlquilerApi.DataAccessLayer.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20230424210856_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("GestorAlquilerApi.BussinessLogicLayer.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cif")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Population")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Cif")
                        .IsUnique();

                    b.ToTable("Branch");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "C. de Berlín, 2, 03503 Benidorm, Alicante",
                            Cif = "C-124582",
                            Country = "Spain",
                            Name = "Centauro Car hire Benidorm",
                            Population = "Benidorm"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Alicante Airport, 03195 Elx, Alicante",
                            Cif = "C-124625",
                            Country = "Spain",
                            Name = "Centauro Car hire Alicante airport",
                            Population = "Alicante"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Av. de las Cortes Valencianas, 6, 03183 Torrevieja, Alicante",
                            Cif = "C-126385",
                            Country = "Spain",
                            Name = "Centauro Car Rental Torrevieja",
                            Population = "Torrevieja"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Av. Severiano Falcão 2, Prior Velho, 2685-378 Lisboa, Portugal",
                            Cif = "C-124758",
                            Country = "Portugal",
                            Name = "Centauro Location voiture Lisbonne",
                            Population = "Lisboa"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Via Portuense, 2483, 00054 Fiumicino RM, Italia",
                            Cif = "C-123485",
                            Country = "Italia",
                            Name = "Centauro Rent a Car Rome Airport Fiumicino",
                            Population = "Roma"
                        });
                });

            modelBuilder.Entity("GestorAlquilerApi.BussinessLogicLayer.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BranchId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("FuelType")
                        .HasColumnType("TEXT");

                    b.Property<string>("GearShiftType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<string>("Registration")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("Registration")
                        .IsUnique();

                    b.ToTable("Car");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BranchId = 1,
                            Brand = "Fiat",
                            Category = "A",
                            FuelType = "Gasoline",
                            GearShiftType = "Manual",
                            Image = "Fiat500Image",
                            Model = "500",
                            Registration = "3993-YLH"
                        },
                        new
                        {
                            Id = 2,
                            BranchId = 2,
                            Brand = "Fiat",
                            Category = "A",
                            FuelType = "Gasoline",
                            GearShiftType = "Manual",
                            Image = "Fiat500Image",
                            Model = "500",
                            Registration = "2519-YES"
                        },
                        new
                        {
                            Id = 3,
                            BranchId = 3,
                            Brand = "Fiat",
                            Category = "A",
                            FuelType = "Diesel",
                            GearShiftType = "Manual",
                            Image = "Fiat500Image",
                            Model = "500",
                            Registration = "8324-TJS"
                        },
                        new
                        {
                            Id = 4,
                            BranchId = 4,
                            Brand = "Fiat",
                            Category = "A",
                            FuelType = "Gasoline",
                            GearShiftType = "Automatic",
                            Image = "Fiat500Image",
                            Model = "500",
                            Registration = "0035-LQJ"
                        },
                        new
                        {
                            Id = 5,
                            BranchId = 5,
                            Brand = "Fiat",
                            Category = "A",
                            FuelType = "Gasoline",
                            GearShiftType = "Manual",
                            Image = "Fiat500Image",
                            Model = "500",
                            Registration = "4596-TCK"
                        },
                        new
                        {
                            Id = 6,
                            BranchId = 1,
                            Brand = "Kia",
                            Category = "C",
                            FuelType = "Diesel",
                            GearShiftType = "Manual",
                            Image = "KiaCeedImage",
                            Model = "Ceed",
                            Registration = "3960-XXN"
                        },
                        new
                        {
                            Id = 7,
                            BranchId = 2,
                            Brand = "Kia",
                            Category = "C",
                            FuelType = "Gasoline",
                            GearShiftType = "Manual",
                            Image = "KiaCeedImage",
                            Model = "Ceed",
                            Registration = "3063-GIR"
                        },
                        new
                        {
                            Id = 8,
                            BranchId = 3,
                            Brand = "Kia",
                            Category = "C",
                            FuelType = "Gasoline",
                            GearShiftType = "Automatic",
                            Image = "KiaCeedImage",
                            Model = "Ceed",
                            Registration = "1551-DLN"
                        },
                        new
                        {
                            Id = 9,
                            BranchId = 4,
                            Brand = "Kia",
                            Category = "C",
                            FuelType = "Gasoline",
                            GearShiftType = "Manual",
                            Image = "KiaCeedImage",
                            Model = "Ceed",
                            Registration = "1547-SPJ"
                        },
                        new
                        {
                            Id = 10,
                            BranchId = 5,
                            Brand = "Kia",
                            Category = "C",
                            FuelType = "Diesel",
                            GearShiftType = "Automatic",
                            Image = "KiaCeedImage",
                            Model = "Ceed",
                            Registration = "0725-TMW"
                        },
                        new
                        {
                            Id = 11,
                            BranchId = 1,
                            Brand = "Volkswagen",
                            Category = "D",
                            FuelType = "Diesel",
                            GearShiftType = "Automatic",
                            Image = "VolkswagenTRocImage",
                            Model = "T-ROC",
                            Registration = "3967-QPV"
                        },
                        new
                        {
                            Id = 12,
                            BranchId = 2,
                            Brand = "Volkswagen",
                            Category = "D",
                            FuelType = "Gasoline",
                            GearShiftType = "Manual",
                            Image = "VolkswagenTRocImage",
                            Model = "T-ROC",
                            Registration = "9125-NUJ"
                        },
                        new
                        {
                            Id = 13,
                            BranchId = 3,
                            Brand = "Volkswagen",
                            Category = "D",
                            FuelType = "Diesel",
                            GearShiftType = "Automatic",
                            Image = "VolkswagenTRocImage",
                            Model = "T-ROC",
                            Registration = "6997-QVO"
                        },
                        new
                        {
                            Id = 14,
                            BranchId = 4,
                            Brand = "Volkswagen",
                            Category = "D",
                            FuelType = "Gasoline",
                            GearShiftType = "Manual",
                            Image = "VolkswagenTRocImage",
                            Model = "T-ROC",
                            Registration = "3315-QUI"
                        },
                        new
                        {
                            Id = 15,
                            BranchId = 5,
                            Brand = "Volkswagen",
                            Category = "D",
                            FuelType = "Diesel",
                            GearShiftType = "Automatic",
                            Image = "VolkswagenTRocImage",
                            Model = "T-ROC",
                            Registration = "9243-IAC"
                        },
                        new
                        {
                            Id = 16,
                            BranchId = 1,
                            Brand = "Hyundai",
                            Category = "D",
                            FuelType = "Diesel",
                            GearShiftType = "Automatic",
                            Image = "HyundaiKonaImage",
                            Model = "Kona",
                            Registration = "3013-EKU"
                        },
                        new
                        {
                            Id = 17,
                            BranchId = 2,
                            Brand = "Hyundai",
                            Category = "D",
                            FuelType = "Diesel",
                            GearShiftType = "Manual",
                            Image = "HyundaiKonaImage",
                            Model = "Kona",
                            Registration = "8640-AZH"
                        },
                        new
                        {
                            Id = 18,
                            BranchId = 3,
                            Brand = "Hyundai",
                            Category = "D",
                            FuelType = "Diesel",
                            GearShiftType = "Automatic",
                            Image = "HyundaiKonaImage",
                            Model = "Kona",
                            Registration = "1540-QQM"
                        },
                        new
                        {
                            Id = 19,
                            BranchId = 4,
                            Brand = "Hyundai",
                            Category = "D",
                            FuelType = "Gasoline",
                            GearShiftType = "Manual",
                            Image = "HyundaiKonaImage",
                            Model = "Kona",
                            Registration = "9947-WES"
                        },
                        new
                        {
                            Id = 20,
                            BranchId = 5,
                            Brand = "Hyundai",
                            Category = "D",
                            FuelType = "Diesel",
                            GearShiftType = "Automatic",
                            Image = "HyundaiKonaImage",
                            Model = "Kona",
                            Registration = "7365-BZL"
                        },
                        new
                        {
                            Id = 21,
                            BranchId = 1,
                            Brand = "Ford",
                            Category = "B",
                            FuelType = "Diesel",
                            GearShiftType = "Manual",
                            Image = "FordTransitImage",
                            Model = "Transit ",
                            Registration = "5752-PLO"
                        },
                        new
                        {
                            Id = 22,
                            BranchId = 2,
                            Brand = "Ford",
                            Category = "B",
                            FuelType = "Diesel",
                            GearShiftType = "Manual",
                            Image = "FordTransitImage",
                            Model = "Transit ",
                            Registration = "5755-FIO"
                        },
                        new
                        {
                            Id = 23,
                            BranchId = 3,
                            Brand = "Ford",
                            Category = "B",
                            FuelType = "Diesel",
                            GearShiftType = "Manual",
                            Image = "FordTransitImage",
                            Model = "Transit ",
                            Registration = "8673-QLF"
                        },
                        new
                        {
                            Id = 24,
                            BranchId = 4,
                            Brand = "Ford",
                            Category = "B",
                            FuelType = "Diesel",
                            GearShiftType = "Manual",
                            Image = "FordTransitImage",
                            Model = "Transit ",
                            Registration = "0332-GYO"
                        },
                        new
                        {
                            Id = 25,
                            BranchId = 5,
                            Brand = "Ford",
                            Category = "B",
                            FuelType = "Diesel",
                            GearShiftType = "Manual",
                            Image = "FordTransitImage",
                            Model = "Transit ",
                            Registration = "3145-WEU"
                        },
                        new
                        {
                            Id = 26,
                            BranchId = 1,
                            Brand = "Nissan",
                            Category = "A",
                            FuelType = "Gasoline",
                            GearShiftType = "Manual",
                            Image = "NissanSkylineImage",
                            Model = "Skyline ",
                            Registration = "4609-KFD"
                        });
                });

            modelBuilder.Entity("GestorAlquilerApi.BussinessLogicLayer.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BankAccount")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConfirmationPassword")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Registration")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rol")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Registration")
                        .IsUnique();

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BankAccount = "1234Bank",
                            ConfirmationPassword = "$2a$11$fTBkLBVJYf.GtMGVjUr5R.2BY0x6MIEaPIK5Oq6ImroFrP5J0owFa",
                            Email = "mh.haidor@gmail.com",
                            LastName = "Hicho Haidor",
                            Name = "Muhammad",
                            Password = "$2a$11$yaTKOu2DRCNELKRF4n67PebmdvivH7/KDmv1LLhseORCk50YNaMiK",
                            PhoneNumber = 686601702,
                            Registration = "45113560A",
                            Rol = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            BankAccount = "1234Bank",
                            ConfirmationPassword = "$2a$11$9Ezwl4F6yJtLBBNcsphJkeWkax21tg24wHztSpAGB2XXHiDs3YePu",
                            Email = "jhon.doe@gmail.com",
                            LastName = "Doe",
                            Name = "Jhon",
                            Password = "$2a$11$mBkYJQ7Ugru4UJv5zWBs8OaKrxiCgsPAMMDW/mMHpxkPVe3iG9aJS",
                            PhoneNumber = 695632458,
                            Registration = "45223659F",
                            Rol = "User"
                        },
                        new
                        {
                            Id = 3,
                            BankAccount = "1234Bank",
                            ConfirmationPassword = "$2a$11$BmaZpGBvGmiAF/JdiOLoHeLjfxxnALPHAd4mwyDp9bkay4366rj7C",
                            Email = "jane.doe@gmail.com",
                            LastName = "Doe",
                            Name = "Jane",
                            Password = "$2a$11$Gmlux9WPAjxsWBHNQVK8juZemiqKeoqIPpoVxRdp4.bglHQbEnIGG",
                            PhoneNumber = 695632458,
                            Registration = "45369875G",
                            Rol = "User"
                        });
                });

            modelBuilder.Entity("GestorAlquilerApi.BussinessLogicLayer.Models.Planning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BranchId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CarCategory")
                        .HasColumnType("TEXT");

                    b.Property<int>("CarsAvailables")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Day")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Planning");
                });

            modelBuilder.Entity("GestorAlquilerApi.BussinessLogicLayer.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BranchId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CarCategory")
                        .HasColumnType("TEXT");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("ClientId");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("GestorAlquilerApi.BussinessLogicLayer.Models.Car", b =>
                {
                    b.HasOne("GestorAlquilerApi.BussinessLogicLayer.Models.Branch", "Branch")
                        .WithMany("Cars")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("GestorAlquilerApi.BussinessLogicLayer.Models.Planning", b =>
                {
                    b.HasOne("GestorAlquilerApi.BussinessLogicLayer.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("GestorAlquilerApi.BussinessLogicLayer.Models.Reservation", b =>
                {
                    b.HasOne("GestorAlquilerApi.BussinessLogicLayer.Models.Branch", "Branch")
                        .WithMany("Reservations")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestorAlquilerApi.BussinessLogicLayer.Models.Client", "Client")
                        .WithMany("Reservations")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("GestorAlquilerApi.BussinessLogicLayer.Models.Branch", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("GestorAlquilerApi.BussinessLogicLayer.Models.Client", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
